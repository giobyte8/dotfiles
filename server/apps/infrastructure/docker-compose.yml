services:
  # This will port forward/reverse proxy to all services eventually
  bifrost:
    image: nginx:1.23.3-alpine
    container_name: bifrost
    restart: "no"
    ports:
      - 2000:443
      - 443:443
    volumes:
      - "$BIFROST_UPSTREAM_SSL_PATH:/mnt/upstream_ssl_certs"
      - "$BIFROST_SITES_PATH:/etc/nginx/conf.d"
      - "$BIFROST_LOGS_PATH:/var/log/nginx"
    networks:
      hservices:
        ipv4_address: 172.20.1.254

  mariadb:
    image: mariadb:10.8.3-jammy
    container_name: mariadb
    restart: unless-stopped
    ports:
      - 3306:3306
    volumes:
      - ${MARIADB_DATA}:/var/lib/mysql
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      hservices:
        ipv4_address: 172.20.1.130

  postgres:
    image: postgres:14.6-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    networks:
      hservices:
        ipv4_address: 172.20.1.133

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - 5400:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS}
    networks:
      - hservices

  rabbitmq:
    image: rabbitmq:3.9.15-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    user: "${UID}:${GID}"
    ports:
      - 5671:5671
      - 5672:5672
      - 15671:15671
      - 15672:15672
    environment:
      - 'RABBITMQ_DEFAULT_USER=$RABBITMQ_USER'
      - 'RABBITMQ_DEFAULT_PASS=$RABBITMQ_PASS'
    volumes:
      - ${RABBITMQ_DATA}:/var/lib/rabbitmq
    networks:
      hservices:
        ipv4_address: 172.20.1.131

  redis:
    image: redis:6.2.6-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      hservices:
        ipv4_address: 172.20.1.132


  ###############################################
  ## Telemetry collectors and backends

  otelcol:
    image: otel/opentelemetry-collector-contrib
    container_name: otelcol
    ports:
      # No need to bind below ports

      # - 1888:1888   # pprof extension
      # - 8888:8888   # Prometheus metrics exposed by the Collector
      # - 8889:8889   # Prometheus exporter metrics
      # - 13133:13133 # health_check extension
      # - 4317:4317   # OTLP gRPC receiver
      # - 4318:4318   # OTLP http receiver
      # - 55679:55679 # zpages extension
    volumes:
      - "./otelcol.yaml:/etc/otelcol-contrib/config.yaml"
    networks:
      - hservices

  # From: https://www.jaegertracing.io/docs/2.5/getting-started/#all-in-one
  jaeger:
    image: jaegertracing/jaeger:2.5.0
    container_name: jaeger
    ports:
      - 16686:16686  # UI Port
      # - 4317:4317  # OTLP Collector
      # - 4318:4318  # OTLP Collector
      # - 5778:5778  # ?
      # - 9411:9411  # ?
    networks:
      - hservices

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090 # UI and APIs
    volumes:
      - "./config/prometheus.yaml:/etc/prometheus/prometheus.yml"
      - "$PROM_DATA:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=90d"
      - "--web.enable-lifecycle"
    networks:
      - hservices

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "9091:3000" # Grafana UI
    volumes:
      - "$GRAFANA_DATA:/var/lib/grafana"
      # - "./config/grafana/datasources:/etc/grafana/provisioning/datasources"
      # - "./config/grafana/dashboards:/etc/grafana/provisioning/dashboards"
    environment:
      - "GF_SECURITY_ADMIN_USER=$GRAFANA_USER"
      - "GF_SECURITY_ADMIN_PASSWORD=$GRAFANA_PASS"
      # - GF_INSTALL_PLUGINS= # You can install plugins here if needed
    depends_on:
      - prometheus
    networks:
      - hservices

networks:
  hservices:
    name: hservices
    driver: bridge
    ipam:
      config:
        # 172.20.1-254
        - subnet: 172.20.1.0/24

        # 172.20.1.1-126 (127?)
          ip_range: 172.20.1.0/25

